name: Backend CD

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          cd starter/backend
          pip install pipenv && pipenv install --dev

      - name: Run lint
        run: |
          cd starter/backend
          pipenv run lint

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          cd starter/backend
          pip install pipenv && pipenv install --dev

      - name: Run tests
        run: |
          cd starter/backend
          pipenv run test

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: |
          cd starter/backend
          docker build -t mp-backend:latest .

  push_to_ecr:
    name: Push to ECR
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        env:
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          AWS_REGION: "us-east-1"
        run: |
          cd starter/backend
          docker tag mp-backend:latest $ECR_REPOSITORY/backend:latest
          docker push $ECR_REPOSITORY/backend:latest

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: [push_to_ecr]
    env:
      ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
      AWS_REGION: "us-east-1"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: $AWS_REGION

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name cluster --region $AWS_REGION

      - name: Set image tag
        run: |
          cd starter/backend/k8s
          kustomize edit set image backend=$ECR_REPOSITORY/backend:latest

      - name: Deploy to Kubernetes
        run: |
          cd starter/backend/k8s
          kustomize build | kubectl apply -f -